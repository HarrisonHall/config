* Emacs
Harrison's build of emacs.
** Benefits
- All requirements are saved locally
- Emacs runs in client-server mode, so all instances are connected
- Copy/pasting works with xclip
- Extra modes
  - yaml mode
  - gdscript mode
  - markdown mode
  - org mode
- Comes with magit!
- TODOs/FIXMEs/DEBUGs are highlighted
- RSS with elfeed
- Rainbow delimeters make brackets super easy

** Keybindings
*** General
M-Shift-Q save and quit **all** emacs windows (closes server)
C-x C-c saves and closes a window
C-x C-f allows you to access a new file
C-x b changes window to another already-opened pane
C-g backs out of any option in the command line
q generally backs out of popup windows

*** Window Controls
C-x | and - split windows
C-x x deletes the window
C-up/down/left/right swap windows
M-up/down/left/right resize windows

*** Bookmarks
Bookmarks allow you to globally save and follow lines of code
C-x r m allows you to make a bookmark
C-x r l allows you to list and follow bookmarks


*** Code following
Dumb-jumping to function definitions can be done with M-.

*** Code control
C-h hides and shows code block folds

*** File/Code tree
C-t shows the dired tree sidebar
C-x i shows the index-tree, a sidebar on the right of indexes of the major-mode
(which is usually just functions/classes)

*** Vim
C-z switches to evil-mode (vim/vi)

*** RSS
M-e pulls the rss feed

*** Magit
Open up magit with C-x g for the git repo
Open up magit actions for a file with C-c M-g

*** Org
C-c C-c Create tag
C-c C-t Cycle TODO status
C-c t   Show TODOs
C-c C-, Set priority
C-c C-. Insert date
M-Enter Newline with same state
C-c /   Create a tree from commands
C-c |   Create table
C-c '   Create/edit formulas in table
C-c C-l Create link
C-c a a Create agenda for current week
C-c a t Create TODO agenda
C-c a L Create timeline of current org file
C-c C-e Export file

**** Coding
C-c     Evaluate code buffer

Code block example:
#+begin_src python :results output
  import pandas as pd

  p = pd.DataFrame(
	  {
		  "Hello": [0, 1, 2, 3],
		  "y": [4, 8, 19, 39]
	  }
  )
  print(p)
#+end_src

** Concepts
*** Mark
While the point is the position of the curser in emacs, the mark is a seperate
position in each buffer. C-space marks the buffer at a position by adding it to
the mark-ring. C-x C-space jumps to the mark.

** TODOs
- eyebrowse mode
- bookmark+
  
